pipeline {
  agent any
  triggers {
    pollSCM 'H/5 * * * *'
  }
  parameters {
      string(name: 'APP_VERSION', defaultValue: '1.2.2-dev', description: 'Version of the application to be deployed?')
  }

  stages {
    stage('Prepare') {
        steps {
          sh 'service docker stop'
          sh 'rm -rf /var/lib/docker'
          sh "echo { \\\"max-concurrent-uploads\\\": \\\"1\\\" } >> /etc/docker/daemon.json"
          sh 'service docker start'
          sh 'sleep 10'
        }
    }
    stage('Registry-Credentials') {
        steps {
          sh 'mkdir ${HOME}/.docker'
          sh 'cp /etc/.jenkins-master-harbor/.dockerconfigjson ${HOME}/.docker/config.json'
        }
    }
    stage('Build') {
        steps {
          sh 'make build'
        }
    }
    stage('Deploy') {
        steps {
          dir('helm/environments/develop'){
            sh 'helmfile -l stage=0 sync'
          }
          sh 'sleep 10'
          dir('helm/environments/develop'){
            sh 'helmfile -l stage=3 delete'
            sh 'helmfile -l stage=0 sync'
            sh 'helmfile -l stage=3 sync --set image.chuchu.version=${APP_VERSION} --set image.thala.version=${APP_VERSION} '
          }
        }
    }
    stage('Regression Test Suite Run') {
        steps {
          sh 'sleep 300'
          dir('apps/doorward-testing/regression'){
            sh 'newman run DoorwardServicesRegression.json -d TestData.csv --disable-unicode'
          }
          dir('apps/doorward-testing/regression'){
            sh 'rm ./*.html'
            publishHTML (target: [
              allowMissing: false,
              alwaysLinkToLastBuild: false,
              keepAll: true,
              reportDir: 'newman',
              reportFiles: '**/*.html',
              reportName: "Regression Report"
              ])
          }
        }
    }
  }
  post {
       success {
           mail bcc: '', body: 'develop.doorward.org is successfully deployed. Please wait for 5 minutes for the website to become Online.', cc: '', charset: 'UTF-8', from: 'jenkins@doorward.tech', mimeType: 'text/html', subject: "ERROR CI: Project name -> ${env.JOB_NAME}", to: "basil@doorward.tech,madhu@doorward.tech,sreenath@doorward.tech";
       }
       failure {
           mail bcc: '', body: "<b>Example</b><br>Project: ${env.JOB_NAME} <br>Build Number: ${env.BUILD_NUMBER} <br> URL de build: ${env.BUILD_URL}", cc: '', charset: 'UTF-8', from: 'jenkins@doorward.tech', mimeType: 'text/html', replyTo: '', subject: "ERROR CI: Project name -> ${env.JOB_NAME}", to: "basil@doorward.tech,moses@doorward.tech,madhu@doorward.tech,sreenath@doorward.tech";
       }
  }

}

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ghostdb-claim
  namespace: doorward-commons
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: do-block-storage
  resources:
    requests:
      storage: 8G

---
apiVersion: v1
data:
  MYSQL_DATABASE: ghost
  MYSQL_PASSWORD: ghj54gsdDJ
  MYSQL_ROOT_PASSWORD: ghj54g64hdF
  MYSQL_USER: ghost
kind: ConfigMap
metadata:
  labels:
    app: ghostdb
  name: ghostdb-config-myob
  namespace: doorward-commons

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  creationTimestamp: "2020-05-07T03:11:42Z"
  generation: 3
  labels:
    app: ghostdb
  name: ghostdb
  namespace: doorward-commons
  resourceVersion: "4669011"
  selfLink: /apis/extensions/v1beta1/namespaces/default/deployments/ghostdb
  uid: bdd8244a-8672-4d99-a063-4e131c881711
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: ghostdb
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: ghostdb
    spec:
      containers:
      - env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            configMapKeyRef:
              key: MYSQL_ROOT_PASSWORD
              name: ghostdb-config-myob
        - name: MYSQL_DATABASE
          valueFrom:
            configMapKeyRef:
              key: MYSQL_DATABASE
              name: ghostdb-config-myob
        - name: MYSQL_USER
          valueFrom:
            configMapKeyRef:
              key: MYSQL_USER
              name: ghostdb-config-myob
        - name: MYSQL_PASSWORD
          valueFrom:
            configMapKeyRef:
              key: MYSQL_PASSWORD
              name: ghostdb-config-myob
        image: mysql:5.7
        imagePullPolicy: IfNotPresent
        name: mysql-1
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - name: ghostdb-storage
          mountPath: /var/lib/mysql
          subPath: mysql
      volumes:
        - name: ghostdb-storage
          persistentVolumeClaim:
            claimName: ghostdb-claim
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: ghostdb
  name: ghostdb-service
  namespace: doorward-commons
spec:
  ports:
  - port: 3306
    protocol: TCP
    targetPort: 3306
  selector:
    app: ghostdb
  sessionAffinity: None
  type: ClusterIP
status:
  loadBalancer: {}

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ghost-claim
  namespace: doorward-commons
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: do-block-storage
  resources:
    requests:
      storage: 5G

---
apiVersion: v1
data:
  database__client: mysql
  database__connection__database: ghost
  database__connection__host: ghostdb-service
  database__connection__password: ghj54gsdDJ
  database__connection__user: ghost
  url: https://www.doorward.tech/blog
kind: ConfigMap
metadata:
  labels:
    app: ghost
  name: ghost-config-eig4
  namespace: doorward-commons


---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  creationTimestamp: "2020-05-07T03:29:22Z"
  generation: 1
  labels:
    app: ghost
  name: ghost
  namespace: doorward-commons
  resourceVersion: "4674744"
  selfLink: /apis/extensions/v1beta1/namespaces/default/deployments/ghost
  uid: b2ec19f9-78ca-427e-91c4-a5bca6a5fa24
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: ghost
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: ghost
    spec:
      containers:
      - env:
        - name: database__client
          valueFrom:
            configMapKeyRef:
              key: database__client
              name: ghost-config-eig4
        - name: database__connection__host
          valueFrom:
            configMapKeyRef:
              key: database__connection__host
              name: ghost-config-eig4
        - name: database__connection__user
          valueFrom:
            configMapKeyRef:
              key: database__connection__user
              name: ghost-config-eig4
        - name: database__connection__password
          valueFrom:
            configMapKeyRef:
              key: database__connection__password
              name: ghost-config-eig4
        - name: database__connection__database
          valueFrom:
            configMapKeyRef:
              key: database__connection__database
              name: ghost-config-eig4
        image: ghost:3.14.0
        imagePullPolicy: IfNotPresent
        name: ghost-1
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - name: ghost-storage
          mountPath: /var/lib/ghost/content
          subPath: mysql
      volumes:
        - name: ghost-storage
          persistentVolumeClaim:
            claimName: ghost-claim
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30

---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-07T03:30:28Z"
  labels:
    app: ghost
  name: ghost-service
  namespace: doorward-commons
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 2368
  selector:
    app: ghost
  sessionAffinity: None
  type: ClusterIP

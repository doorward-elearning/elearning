version: '2.1'

volumes:
  edudoor_data:
    external: true

services:
  edudoor:
    image: dev_edudoor:latest
    build:
      context: ../../
      dockerfile: docker/dev/Dockerfile
  edudoor_frontend:
    image: dev_edudoor:latest
    container_name: edudoor_frontend
    links:
      - edudoor_rest_api
    volumes:
      - /usr/app/node_modules
      - ../../:/usr/app
    env_file:
      - ../../.env
    environment:
      REACT_APP_BASE_URL: http://localhost:7000/api/v1/
      REACT_APP_REQUEST_DELAY: 500
      EDUDOOR_WEBSITE_LINK: http://localhost:3006
    ports:
      - '3005:3000'
    expose:
      - '3000'
    entrypoint:
      - /usr/app/apps/edudoor-frontend/entrypoint.sh
    depends_on:
      edudoor_rest_api:
        condition: service_started
      edudoor_website:
        condition: service_started
    healthcheck:
      test: ['CMD-SHELL', 'curl -s localhost:3000']
      interval: 10s
      timeout: 10s
      retries: 20
  edudoor_rest_api:
    image: dev_edudoor:latest
    container_name: edudoor_node_backend
    volumes:
      - /usr/app/node_modules
      - ../../:/usr/app
    environment:
      DATABASE_URL: postgres://postgres:postgres@edudoor_node_database:5432/edudoor
      OPENOLAT_API_URL: http://localhost:8080/openolat/restapi
      FRONTEND_URL: http://localhost:3005
    ports:
      - '7000:7000'
    expose:
      - '7000'
    entrypoint:
      - /usr/app/apps/edudoor-node-backend/entrypoint.sh
    depends_on:
      edudoor_node_database:
        condition: service_healthy
      edudoor_openvidu:
        condition: service_started
    healthcheck:
      test: ['CMD-SHELL', 'curl -s localhost:7000']
      interval: 10s
      timeout: 10s
      retries: 20
  edudoor_website:
    image: dev_edudoor:latest
    container_name: edudoor_website
    volumes:
      - /usr/app/node_modules
      - ../../:/usr/app
    environment:
      EDUDOOR_APPLICATION_LINK: http://localhost:3005
    ports:
      - '3006:3001'
    expose:
      - '3001'
    entrypoint:
      - /usr/app/apps/edudoor-website/entrypoint.sh
    depends_on:
      edudoor_rest_api:
        condition: service_started
    healthcheck:
      test: ['CMD-SHELL', 'curl -s localhost:3001']
      interval: 10s
      timeout: 10s
      retries: 20
  edudoor_node_database:
    image: postgres:9.6-alpine
    container_name: edudoor_node_backend_db
    restart: always
    ports:
      - '5434:5432'
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: edudoor
    volumes:
      - edudoor_data:/var/lib/postgresql/edudoor
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 5s
      timeout: 10s
      retries: 10
  edudoor_openvidu:
    image: openvidu/openvidu-server-kms
    container_name: edudoor_openvidu
    network_mode: host
    ports:
      - '4443:4443'
      - '8888:8888'
      - '9091:9091'
    environment:
      openvidu.secret: password
      server.ssl.enabled: 'true'
      openvidu.webhook: 'true'
      openvidu.webhook.endpoint: http://localhost:7000/api/v1/meetings/webhook
      openvidu.webhook.events: "['sessionCreated', 'sessionDestroyed', 'recordingStatusChanged']"
